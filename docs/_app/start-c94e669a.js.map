{"version":3,"file":"start-c94e669a.js","sources":["../../../generated/root.svelte","../../../generated/manifest.js","../../../runtime/chunks/utils.js","../../../runtime/paths.js","../../../runtime/client/start.js"],"sourcesContent":["<!-- This file is generated by @sveltejs/kit â€” do not edit it! -->\n<script>\n\timport { setContext, afterUpdate, onMount } from 'svelte';\n\n\t// stores\n\texport let stores;\n\texport let page;\n\n\texport let components;\n\texport let props_0 = null;\n\texport let props_1 = null;\n\texport let props_2 = null;\n\n\tsetContext('__svelte__', stores);\n\n\t$: stores.page.set(page);\n\tafterUpdate(stores.page.notify);\n\n\tlet mounted = false;\n\tlet navigated = false;\n\tlet title = null;\n\n\tonMount(() => {\n\t\tconst unsubscribe = stores.page.subscribe(() => {\n\t\t\tif (mounted) {\n\t\t\t\tnavigated = true;\n\t\t\t\ttitle = document.title || 'untitled page';\n\t\t\t}\n\t\t});\n\n\t\tmounted = true;\n\t\treturn unsubscribe;\n\t});\n</script>\n\n{#if components[1]}\n\t<svelte:component this={components[0]} {...(props_0 || {})}>\n\t\t{#if components[2]}\n\t\t\t<svelte:component this={components[1]} {...(props_1 || {})}>\n\t\t\t\t<svelte:component this={components[2]} {...(props_2 || {})}/>\n\t\t\t</svelte:component>\n\t\t{:else}\n\t\t\t<svelte:component this={components[1]} {...(props_1 || {})} />\n\t\t{/if}\n\t</svelte:component>\n{:else}\n\t<svelte:component this={components[0]} {...(props_0 || {})} />\n{/if}\n\n{#if mounted}\n\t<div id=\"svelte-announcer\" aria-live=\"assertive\" aria-atomic=\"true\" style=\"position: absolute; left: 0; top: 0; clip: rect(0 0 0 0); clip-path: inset(50%); overflow: hidden; white-space: nowrap; width: 1px; height: 1px\">\n\t\t{#if navigated}\n\t\t\t{title}\n\t\t{/if}\n\t</div>\n{/if}","const c = [\n\t() => import(\"..\\\\..\\\\src\\\\routes\\\\__layout.svelte\"),\n\t() => import(\"..\\\\runtime\\\\components\\\\error.svelte\"),\n\t() => import(\"..\\\\..\\\\src\\\\routes\\\\index.svelte\"),\n\t() => import(\"..\\\\..\\\\src\\\\routes\\\\settings.svelte\"),\n\t() => import(\"..\\\\..\\\\src\\\\routes\\\\connect.svelte\"),\n\t() => import(\"..\\\\..\\\\src\\\\routes\\\\add.svelte\")\n];\n\nconst d = decodeURIComponent;\n\nexport const routes = [\n\t// src/routes/index.svelte\n\t[/^\\/$/, [c[0], c[2]], [c[1]]],\n\n\t// src/routes/settings.svelte\n\t[/^\\/settings\\/?$/, [c[0], c[3]], [c[1]]],\n\n\t// src/routes/connect.svelte\n\t[/^\\/connect\\/?$/, [c[0], c[4]], [c[1]]],\n\n\t// src/routes/add.svelte\n\t[/^\\/add\\/?$/, [c[0], c[5]], [c[1]]]\n];\n\n// we import the root layout/error components eagerly, so that\n// connectivity errors after initialisation don't nuke the app\nexport const fallback = [c[0](), c[1]()];","/** @param {HTMLDocument} doc */\nfunction get_base_uri(doc) {\n\tlet baseURI = doc.baseURI;\n\n\tif (!baseURI) {\n\t\tconst baseTags = doc.getElementsByTagName('base');\n\t\tbaseURI = baseTags.length ? baseTags[0].href : doc.URL;\n\t}\n\n\treturn baseURI;\n}\n\nexport { get_base_uri as g };\n","/** @type {string} */\nlet base = '';\n\n/** @type {string} */\nlet assets = '';\n\n/** @param {{ base: string, assets: string }} paths */\nfunction set_paths(paths) {\n\tbase = paths.base;\n\tassets = paths.assets || base;\n}\n\nexport { assets, base, set_paths };\n","import Root from '__GENERATED__/root.svelte';\nimport { fallback, routes } from '__GENERATED__/manifest.js';\nimport { onMount, tick } from 'svelte';\nimport { g as get_base_uri } from '../chunks/utils.js';\nimport { writable } from 'svelte/store';\nimport { init } from './singletons.js';\nimport { set_paths } from '../paths.js';\n\nfunction scroll_state() {\n\treturn {\n\t\tx: pageXOffset,\n\t\ty: pageYOffset\n\t};\n}\n\n/**\n * @param {Event} event\n * @returns {HTMLAnchorElement | SVGAElement | undefined}\n */\nfunction find_anchor(event) {\n\tconst node = event\n\t\t.composedPath()\n\t\t.find((e) => e instanceof Node && e.nodeName.toUpperCase() === 'A'); // SVG <a> elements have a lowercase name\n\treturn /** @type {HTMLAnchorElement | SVGAElement | undefined} */ (node);\n}\n\n/**\n * @param {HTMLAnchorElement | SVGAElement} node\n * @returns {URL}\n */\nfunction get_href(node) {\n\treturn node instanceof SVGAElement\n\t\t? new URL(node.href.baseVal, document.baseURI)\n\t\t: new URL(node.href);\n}\n\nclass Router {\n\t/**\n\t * @param {{\n\t *    base: string;\n\t *    routes: import('types/internal').CSRRoute[];\n\t *    trailing_slash: import('types/internal').TrailingSlash;\n\t *    renderer: import('./renderer').Renderer\n\t * }} opts\n\t */\n\tconstructor({ base, routes, trailing_slash, renderer }) {\n\t\tthis.base = base;\n\t\tthis.routes = routes;\n\t\tthis.trailing_slash = trailing_slash;\n\t\t/** Keeps tracks of multiple navigations caused by redirects during rendering */\n\t\tthis.navigating = 0;\n\n\t\t/** @type {import('./renderer').Renderer} */\n\t\tthis.renderer = renderer;\n\t\trenderer.router = this;\n\n\t\tthis.enabled = true;\n\n\t\t// make it possible to reset focus\n\t\tdocument.body.setAttribute('tabindex', '-1');\n\n\t\t// keeping track of the history index in order to prevent popstate navigation events if needed\n\t\tthis.current_history_index = history.state?.['sveltekit:index'] ?? 0;\n\n\t\tif (this.current_history_index === 0) {\n\t\t\t// create initial history entry, so we can return here\n\t\t\thistory.replaceState({ ...history.state, 'sveltekit:index': 0 }, '', location.href);\n\t\t}\n\n\t\tthis.callbacks = {\n\t\t\t/** @type {Array<({ from, to, cancel }: { from: URL, to: URL | null, cancel: () => void }) => void>} */\n\t\t\tbefore_navigate: [],\n\n\t\t\t/** @type {Array<({ from, to }: { from: URL | null, to: URL }) => void>} */\n\t\t\tafter_navigate: []\n\t\t};\n\t}\n\n\tinit_listeners() {\n\t\tif ('scrollRestoration' in history) {\n\t\t\thistory.scrollRestoration = 'manual';\n\t\t}\n\n\t\t// Adopted from Nuxt.js\n\t\t// Reset scrollRestoration to auto when leaving page, allowing page reload\n\t\t// and back-navigation from other pages to use the browser to restore the\n\t\t// scrolling position.\n\t\taddEventListener('beforeunload', (e) => {\n\t\t\tlet should_block = false;\n\n\t\t\tconst intent = {\n\t\t\t\tfrom: this.renderer.current.url,\n\t\t\t\tto: null,\n\t\t\t\tcancel: () => (should_block = true)\n\t\t\t};\n\n\t\t\tthis.callbacks.before_navigate.forEach((fn) => fn(intent));\n\n\t\t\tif (should_block) {\n\t\t\t\te.preventDefault();\n\t\t\t\te.returnValue = '';\n\t\t\t} else {\n\t\t\t\thistory.scrollRestoration = 'auto';\n\t\t\t}\n\t\t});\n\n\t\t// Setting scrollRestoration to manual again when returning to this page.\n\t\taddEventListener('load', () => {\n\t\t\thistory.scrollRestoration = 'manual';\n\t\t});\n\n\t\t// There's no API to capture the scroll location right before the user\n\t\t// hits the back/forward button, so we listen for scroll events\n\n\t\t/** @type {NodeJS.Timeout} */\n\t\tlet scroll_timer;\n\t\taddEventListener('scroll', () => {\n\t\t\tclearTimeout(scroll_timer);\n\t\t\tscroll_timer = setTimeout(() => {\n\t\t\t\t// Store the scroll location in the history\n\t\t\t\t// This will persist even if we navigate away from the site and come back\n\t\t\t\tconst new_state = {\n\t\t\t\t\t...(history.state || {}),\n\t\t\t\t\t'sveltekit:scroll': scroll_state()\n\t\t\t\t};\n\t\t\t\thistory.replaceState(new_state, document.title, window.location.href);\n\t\t\t\t// iOS scroll event intervals happen between 30-150ms, sometimes around 200ms\n\t\t\t}, 200);\n\t\t});\n\n\t\t/** @param {Event} event */\n\t\tconst trigger_prefetch = (event) => {\n\t\t\tconst a = find_anchor(event);\n\t\t\tif (a && a.href && a.hasAttribute('sveltekit:prefetch')) {\n\t\t\t\tthis.prefetch(get_href(a));\n\t\t\t}\n\t\t};\n\n\t\t/** @type {NodeJS.Timeout} */\n\t\tlet mousemove_timeout;\n\n\t\t/** @param {MouseEvent|TouchEvent} event */\n\t\tconst handle_mousemove = (event) => {\n\t\t\tclearTimeout(mousemove_timeout);\n\t\t\tmousemove_timeout = setTimeout(() => {\n\t\t\t\t// event.composedPath(), which is used in find_anchor, will be empty if the event is read in a timeout\n\t\t\t\t// add a layer of indirection to address that\n\t\t\t\tevent.target?.dispatchEvent(\n\t\t\t\t\tnew CustomEvent('sveltekit:trigger_prefetch', { bubbles: true })\n\t\t\t\t);\n\t\t\t}, 20);\n\t\t};\n\n\t\taddEventListener('touchstart', trigger_prefetch);\n\t\taddEventListener('mousemove', handle_mousemove);\n\t\taddEventListener('sveltekit:trigger_prefetch', trigger_prefetch);\n\n\t\t/** @param {MouseEvent} event */\n\t\taddEventListener('click', (event) => {\n\t\t\tif (!this.enabled) return;\n\n\t\t\t// Adapted from https://github.com/visionmedia/page.js\n\t\t\t// MIT license https://github.com/visionmedia/page.js#license\n\t\t\tif (event.button || event.which !== 1) return;\n\t\t\tif (event.metaKey || event.ctrlKey || event.shiftKey || event.altKey) return;\n\t\t\tif (event.defaultPrevented) return;\n\n\t\t\tconst a = find_anchor(event);\n\t\t\tif (!a) return;\n\n\t\t\tif (!a.href) return;\n\n\t\t\tconst url = get_href(a);\n\t\t\tconst url_string = url.toString();\n\t\t\tif (url_string === location.href) {\n\t\t\t\tif (!location.hash) event.preventDefault();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Ignore if tag has\n\t\t\t// 1. 'download' attribute\n\t\t\t// 2. 'rel' attribute includes external\n\t\t\tconst rel = (a.getAttribute('rel') || '').split(/\\s+/);\n\n\t\t\tif (a.hasAttribute('download') || (rel && rel.includes('external'))) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Ignore if <a> has a target\n\t\t\tif (a instanceof SVGAElement ? a.target.baseVal : a.target) return;\n\n\t\t\t// Check if new url only differs by hash\n\t\t\tif (url.href.split('#')[0] === location.href.split('#')[0]) {\n\t\t\t\t// Call `pushState` to add url to history so going back works.\n\t\t\t\t// Also make a delay, otherwise the browser default behaviour would not kick in\n\t\t\t\tsetTimeout(() => history.pushState({}, '', url.href));\n\t\t\t\tconst info = this.parse(url);\n\t\t\t\tif (info) {\n\t\t\t\t\treturn this.renderer.update(info, [], false);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._navigate({\n\t\t\t\turl,\n\t\t\t\tscroll: a.hasAttribute('sveltekit:noscroll') ? scroll_state() : null,\n\t\t\t\tkeepfocus: false,\n\t\t\t\tchain: [],\n\t\t\t\tdetails: {\n\t\t\t\t\tstate: {},\n\t\t\t\t\treplaceState: false\n\t\t\t\t},\n\t\t\t\taccepted: () => event.preventDefault(),\n\t\t\t\tblocked: () => event.preventDefault()\n\t\t\t});\n\t\t});\n\n\t\taddEventListener('popstate', (event) => {\n\t\t\tif (event.state && this.enabled) {\n\t\t\t\t// if a popstate-driven navigation is cancelled, we need to counteract it\n\t\t\t\t// with history.go, which means we end up back here, hence this check\n\t\t\t\tif (event.state['sveltekit:index'] === this.current_history_index) return;\n\n\t\t\t\tthis._navigate({\n\t\t\t\t\turl: new URL(location.href),\n\t\t\t\t\tscroll: event.state['sveltekit:scroll'],\n\t\t\t\t\tkeepfocus: false,\n\t\t\t\t\tchain: [],\n\t\t\t\t\tdetails: null,\n\t\t\t\t\taccepted: () => {\n\t\t\t\t\t\tthis.current_history_index = event.state['sveltekit:index'];\n\t\t\t\t\t},\n\t\t\t\t\tblocked: () => {\n\t\t\t\t\t\tconst delta = this.current_history_index - event.state['sveltekit:index'];\n\t\t\t\t\t\thistory.go(delta);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Returns true if `url` has the same origin and basepath as the app\n\t * @param {URL} url\n\t */\n\towns(url) {\n\t\treturn url.origin === location.origin && url.pathname.startsWith(this.base);\n\t}\n\n\t/**\n\t * @param {URL} url\n\t * @returns {import('./types').NavigationInfo | undefined}\n\t */\n\tparse(url) {\n\t\tif (this.owns(url)) {\n\t\t\tconst path = decodeURI(url.pathname.slice(this.base.length) || '/');\n\n\t\t\treturn {\n\t\t\t\tid: url.pathname + url.search,\n\t\t\t\troutes: this.routes.filter(([pattern]) => pattern.test(path)),\n\t\t\t\turl,\n\t\t\t\tpath\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n\t * @typedef {Parameters<typeof import('$app/navigation').goto>} GotoParams\n\t *\n\t * @param {GotoParams[0]} href\n\t * @param {GotoParams[1]} opts\n\t * @param {string[]} chain\n\t */\n\tasync goto(\n\t\thref,\n\t\t{ noscroll = false, replaceState = false, keepfocus = false, state = {} } = {},\n\t\tchain\n\t) {\n\t\tconst url = new URL(href, get_base_uri(document));\n\n\t\tif (this.enabled) {\n\t\t\treturn this._navigate({\n\t\t\t\turl,\n\t\t\t\tscroll: noscroll ? scroll_state() : null,\n\t\t\t\tkeepfocus,\n\t\t\t\tchain,\n\t\t\t\tdetails: {\n\t\t\t\t\tstate,\n\t\t\t\t\treplaceState\n\t\t\t\t},\n\t\t\t\taccepted: () => {},\n\t\t\t\tblocked: () => {}\n\t\t\t});\n\t\t}\n\n\t\tlocation.href = url.href;\n\t\treturn new Promise(() => {\n\t\t\t/* never resolves */\n\t\t});\n\t}\n\n\tenable() {\n\t\tthis.enabled = true;\n\t}\n\n\tdisable() {\n\t\tthis.enabled = false;\n\t}\n\n\t/**\n\t * @param {URL} url\n\t * @returns {Promise<import('./types').NavigationResult>}\n\t */\n\tasync prefetch(url) {\n\t\tconst info = this.parse(url);\n\n\t\tif (!info) {\n\t\t\tthrow new Error('Attempted to prefetch a URL that does not belong to this app');\n\t\t}\n\n\t\treturn this.renderer.load(info);\n\t}\n\n\t/** @param {({ from, to }: { from: URL | null, to: URL }) => void} fn */\n\tafter_navigate(fn) {\n\t\tonMount(() => {\n\t\t\tthis.callbacks.after_navigate.push(fn);\n\n\t\t\treturn () => {\n\t\t\t\tconst i = this.callbacks.after_navigate.indexOf(fn);\n\t\t\t\tthis.callbacks.after_navigate.splice(i, 1);\n\t\t\t};\n\t\t});\n\t}\n\n\t/**\n\t * @param {({ from, to, cancel }: { from: URL, to: URL | null, cancel: () => void }) => void} fn\n\t */\n\tbefore_navigate(fn) {\n\t\tonMount(() => {\n\t\t\tthis.callbacks.before_navigate.push(fn);\n\n\t\t\treturn () => {\n\t\t\t\tconst i = this.callbacks.before_navigate.indexOf(fn);\n\t\t\t\tthis.callbacks.before_navigate.splice(i, 1);\n\t\t\t};\n\t\t});\n\t}\n\n\t/**\n\t * @param {{\n\t *   url: URL;\n\t *   scroll: { x: number, y: number } | null;\n\t *   keepfocus: boolean;\n\t *   chain: string[];\n\t *   details: {\n\t *     replaceState: boolean;\n\t *     state: any;\n\t *   } | null;\n\t *   accepted: () => void;\n\t *   blocked: () => void;\n\t * }} opts\n\t */\n\tasync _navigate({ url, scroll, keepfocus, chain, details, accepted, blocked }) {\n\t\tconst from = this.renderer.current.url;\n\t\tlet should_block = false;\n\n\t\tconst intent = {\n\t\t\tfrom,\n\t\t\tto: url,\n\t\t\tcancel: () => (should_block = true)\n\t\t};\n\n\t\tthis.callbacks.before_navigate.forEach((fn) => fn(intent));\n\n\t\tif (should_block) {\n\t\t\tblocked();\n\t\t\treturn;\n\t\t}\n\n\t\tconst info = this.parse(url);\n\t\tif (!info) {\n\t\t\tlocation.href = url.href;\n\t\t\treturn new Promise(() => {\n\t\t\t\t// never resolves\n\t\t\t});\n\t\t}\n\n\t\taccepted();\n\n\t\tif (!this.navigating) {\n\t\t\tdispatchEvent(new CustomEvent('sveltekit:navigation-start'));\n\t\t}\n\t\tthis.navigating++;\n\n\t\tlet { pathname } = url;\n\n\t\tif (this.trailing_slash === 'never') {\n\t\t\tif (pathname !== '/' && pathname.endsWith('/')) pathname = pathname.slice(0, -1);\n\t\t} else if (this.trailing_slash === 'always') {\n\t\t\tconst is_file = /** @type {string} */ (url.pathname.split('/').pop()).includes('.');\n\t\t\tif (!is_file && !pathname.endsWith('/')) pathname += '/';\n\t\t}\n\n\t\tinfo.url = new URL(url.origin + pathname + url.search + url.hash);\n\n\t\tif (details) {\n\t\t\tconst change = details.replaceState ? 0 : 1;\n\t\t\tdetails.state['sveltekit:index'] = this.current_history_index += change;\n\t\t\thistory[details.replaceState ? 'replaceState' : 'pushState'](details.state, '', info.url);\n\t\t}\n\n\t\tawait this.renderer.handle_navigation(info, chain, false, {\n\t\t\tscroll,\n\t\t\tkeepfocus\n\t\t});\n\n\t\tthis.navigating--;\n\t\tif (!this.navigating) {\n\t\t\tdispatchEvent(new CustomEvent('sveltekit:navigation-end'));\n\n\t\t\tconst navigation = { from, to: url };\n\t\t\tthis.callbacks.after_navigate.forEach((fn) => fn(navigation));\n\t\t}\n\t}\n}\n\n/**\n * @param {unknown} err\n * @return {Error}\n */\nfunction coalesce_to_error(err) {\n\treturn err instanceof Error ||\n\t\t(err && /** @type {any} */ (err).name && /** @type {any} */ (err).message)\n\t\t? /** @type {Error} */ (err)\n\t\t: new Error(JSON.stringify(err));\n}\n\n/**\n * Hash using djb2\n * @param {import('types/hooks').StrictBody} value\n */\nfunction hash(value) {\n\tlet hash = 5381;\n\tlet i = value.length;\n\n\tif (typeof value === 'string') {\n\t\twhile (i) hash = (hash * 33) ^ value.charCodeAt(--i);\n\t} else {\n\t\twhile (i) hash = (hash * 33) ^ value[--i];\n\t}\n\n\treturn (hash >>> 0).toString(36);\n}\n\n/**\n * @param {import('types/page').LoadOutput} loaded\n * @returns {import('types/internal').NormalizedLoadOutput}\n */\nfunction normalize(loaded) {\n\tconst has_error_status =\n\t\tloaded.status && loaded.status >= 400 && loaded.status <= 599 && !loaded.redirect;\n\tif (loaded.error || has_error_status) {\n\t\tconst status = loaded.status;\n\n\t\tif (!loaded.error && has_error_status) {\n\t\t\treturn {\n\t\t\t\tstatus: status || 500,\n\t\t\t\terror: new Error()\n\t\t\t};\n\t\t}\n\n\t\tconst error = typeof loaded.error === 'string' ? new Error(loaded.error) : loaded.error;\n\n\t\tif (!(error instanceof Error)) {\n\t\t\treturn {\n\t\t\t\tstatus: 500,\n\t\t\t\terror: new Error(\n\t\t\t\t\t`\"error\" property returned from load() must be a string or instance of Error, received type \"${typeof error}\"`\n\t\t\t\t)\n\t\t\t};\n\t\t}\n\n\t\tif (!status || status < 400 || status > 599) {\n\t\t\tconsole.warn('\"error\" returned from load() without a valid status code â€” defaulting to 500');\n\t\t\treturn { status: 500, error };\n\t\t}\n\n\t\treturn { status, error };\n\t}\n\n\tif (loaded.redirect) {\n\t\tif (!loaded.status || Math.floor(loaded.status / 100) !== 3) {\n\t\t\treturn {\n\t\t\t\tstatus: 500,\n\t\t\t\terror: new Error(\n\t\t\t\t\t'\"redirect\" property returned from load() must be accompanied by a 3xx status code'\n\t\t\t\t)\n\t\t\t};\n\t\t}\n\n\t\tif (typeof loaded.redirect !== 'string') {\n\t\t\treturn {\n\t\t\t\tstatus: 500,\n\t\t\t\terror: new Error('\"redirect\" property returned from load() must be a string')\n\t\t\t};\n\t\t}\n\t}\n\n\t// TODO remove before 1.0\n\tif (/** @type {any} */ (loaded).context) {\n\t\tthrow new Error(\n\t\t\t'You are returning \"context\" from a load function. ' +\n\t\t\t\t'\"context\" was renamed to \"stuff\", please adjust your code accordingly.'\n\t\t);\n\t}\n\n\treturn /** @type {import('types/internal').NormalizedLoadOutput} */ (loaded);\n}\n\n/**\n * @typedef {import('types/internal').CSRComponent} CSRComponent\n * @typedef {{ from: URL; to: URL }} Navigating\n */\n\n/** @param {any} value */\nfunction notifiable_store(value) {\n\tconst store = writable(value);\n\tlet ready = true;\n\n\tfunction notify() {\n\t\tready = true;\n\t\tstore.update((val) => val);\n\t}\n\n\t/** @param {any} new_value */\n\tfunction set(new_value) {\n\t\tready = false;\n\t\tstore.set(new_value);\n\t}\n\n\t/** @param {(value: any) => void} run */\n\tfunction subscribe(run) {\n\t\t/** @type {any} */\n\t\tlet old_value;\n\t\treturn store.subscribe((new_value) => {\n\t\t\tif (old_value === undefined || (ready && new_value !== old_value)) {\n\t\t\t\trun((old_value = new_value));\n\t\t\t}\n\t\t});\n\t}\n\n\treturn { notify, set, subscribe };\n}\n\n/**\n * @param {RequestInfo} resource\n * @param {RequestInit} [opts]\n */\nfunction initial_fetch(resource, opts) {\n\tconst url = typeof resource === 'string' ? resource : resource.url;\n\n\tlet selector = `script[data-type=\"svelte-data\"][data-url=${JSON.stringify(url)}]`;\n\n\tif (opts && typeof opts.body === 'string') {\n\t\tselector += `[data-body=\"${hash(opts.body)}\"]`;\n\t}\n\n\tconst script = document.querySelector(selector);\n\tif (script && script.textContent) {\n\t\tconst { body, ...init } = JSON.parse(script.textContent);\n\t\treturn Promise.resolve(new Response(body, init));\n\t}\n\n\treturn fetch(resource, opts);\n}\n\nclass Renderer {\n\t/**\n\t * @param {{\n\t *   Root: CSRComponent;\n\t *   fallback: [CSRComponent, CSRComponent];\n\t *   target: Node;\n\t *   session: any;\n\t * }} opts\n\t */\n\tconstructor({ Root, fallback, target, session }) {\n\t\tthis.Root = Root;\n\t\tthis.fallback = fallback;\n\n\t\t/** @type {import('./router').Router | undefined} */\n\t\tthis.router;\n\n\t\tthis.target = target;\n\n\t\tthis.started = false;\n\n\t\tthis.session_id = 1;\n\t\tthis.invalid = new Set();\n\t\tthis.invalidating = null;\n\t\tthis.autoscroll = true;\n\t\tthis.updating = false;\n\n\t\t/** @type {import('./types').NavigationState} */\n\t\tthis.current = {\n\t\t\t// @ts-ignore - we need the initial value to be null\n\t\t\turl: null,\n\t\t\tsession_id: 0,\n\t\t\tbranch: []\n\t\t};\n\n\t\t/** @type {Map<string, import('./types').NavigationResult>} */\n\t\tthis.cache = new Map();\n\n\t\t/** @type {{id: string | null, promise: Promise<import('./types').NavigationResult> | null}} */\n\t\tthis.loading = {\n\t\t\tid: null,\n\t\t\tpromise: null\n\t\t};\n\n\t\tthis.stores = {\n\t\t\turl: notifiable_store({}),\n\t\t\tpage: notifiable_store({}),\n\t\t\tnavigating: writable(/** @type {Navigating | null} */ (null)),\n\t\t\tsession: writable(session)\n\t\t};\n\n\t\tthis.$session = null;\n\n\t\tthis.root = null;\n\n\t\tlet ready = false;\n\t\tthis.stores.session.subscribe(async (value) => {\n\t\t\tthis.$session = value;\n\n\t\t\tif (!ready || !this.router) return;\n\t\t\tthis.session_id += 1;\n\n\t\t\tconst info = this.router.parse(new URL(location.href));\n\t\t\tif (info) this.update(info, [], true);\n\t\t});\n\t\tready = true;\n\t}\n\n\tdisable_scroll_handling() {\n\t\tif (import.meta.env.DEV && this.started && !this.updating) {\n\t\t\tthrow new Error('Can only disable scroll handling during navigation');\n\t\t}\n\n\t\tif (this.updating || !this.started) {\n\t\t\tthis.autoscroll = false;\n\t\t}\n\t}\n\n\t/**\n\t * @param {{\n\t *   status: number;\n\t *   error: Error;\n\t *   nodes: Array<Promise<CSRComponent>>;\n\t *   url: URL;\n\t *   params: Record<string, string>;\n\t * }} selected\n\t */\n\tasync start({ status, error, nodes, url, params }) {\n\t\t/** @type {Array<import('./types').BranchNode | undefined>} */\n\t\tconst branch = [];\n\n\t\t/** @type {Record<string, any>} */\n\t\tlet stuff = {};\n\n\t\t/** @type {import('./types').NavigationResult | undefined} */\n\t\tlet result;\n\n\t\tlet error_args;\n\n\t\t// url.hash is empty when coming from the server\n\t\turl.hash = window.location.hash;\n\n\t\ttry {\n\t\t\tfor (let i = 0; i < nodes.length; i += 1) {\n\t\t\t\tconst is_leaf = i === nodes.length - 1;\n\n\t\t\t\tconst node = await this._load_node({\n\t\t\t\t\tmodule: await nodes[i],\n\t\t\t\t\turl,\n\t\t\t\t\tparams,\n\t\t\t\t\tstuff,\n\t\t\t\t\tstatus: is_leaf ? status : undefined,\n\t\t\t\t\terror: is_leaf ? error : undefined\n\t\t\t\t});\n\n\t\t\t\tbranch.push(node);\n\n\t\t\t\tif (node && node.loaded) {\n\t\t\t\t\tif (node.loaded.error) {\n\t\t\t\t\t\tif (error) throw node.loaded.error;\n\t\t\t\t\t\terror_args = {\n\t\t\t\t\t\t\tstatus: node.loaded.status,\n\t\t\t\t\t\t\terror: node.loaded.error,\n\t\t\t\t\t\t\turl\n\t\t\t\t\t\t};\n\t\t\t\t\t} else if (node.loaded.stuff) {\n\t\t\t\t\t\tstuff = {\n\t\t\t\t\t\t\t...stuff,\n\t\t\t\t\t\t\t...node.loaded.stuff\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tresult = error_args\n\t\t\t\t? await this._load_error(error_args)\n\t\t\t\t: await this._get_navigation_result_from_branch({\n\t\t\t\t\t\turl,\n\t\t\t\t\t\tparams,\n\t\t\t\t\t\tstuff,\n\t\t\t\t\t\tbranch,\n\t\t\t\t\t\tstatus,\n\t\t\t\t\t\terror\n\t\t\t\t  });\n\t\t} catch (e) {\n\t\t\tif (error) throw e;\n\n\t\t\tresult = await this._load_error({\n\t\t\t\tstatus: 500,\n\t\t\t\terror: coalesce_to_error(e),\n\t\t\t\turl\n\t\t\t});\n\t\t}\n\n\t\tif (result.redirect) {\n\t\t\t// this is a real edge case â€” `load` would need to return\n\t\t\t// a redirect but only in the browser\n\t\t\tlocation.href = new URL(result.redirect, location.href).href;\n\t\t\treturn;\n\t\t}\n\n\t\tthis._init(result);\n\t}\n\n\t/**\n\t * @param {import('./types').NavigationInfo} info\n\t * @param {string[]} chain\n\t * @param {boolean} no_cache\n\t * @param {{hash?: string, scroll: { x: number, y: number } | null, keepfocus: boolean}} [opts]\n\t */\n\tasync handle_navigation(info, chain, no_cache, opts) {\n\t\tif (this.started) {\n\t\t\tthis.stores.navigating.set({\n\t\t\t\tfrom: this.current.url,\n\t\t\t\tto: info.url\n\t\t\t});\n\t\t}\n\n\t\tawait this.update(info, chain, no_cache, opts);\n\t}\n\n\t/**\n\t * @param {import('./types').NavigationInfo} info\n\t * @param {string[]} chain\n\t * @param {boolean} no_cache\n\t * @param {{hash?: string, scroll: { x: number, y: number } | null, keepfocus: boolean}} [opts]\n\t */\n\tasync update(info, chain, no_cache, opts) {\n\t\tconst token = (this.token = {});\n\t\tlet navigation_result = await this._get_navigation_result(info, no_cache);\n\n\t\t// abort if user navigated during update\n\t\tif (token !== this.token) return;\n\n\t\tthis.invalid.clear();\n\n\t\tif (navigation_result.redirect) {\n\t\t\tif (chain.length > 10 || chain.includes(info.url.pathname)) {\n\t\t\t\tnavigation_result = await this._load_error({\n\t\t\t\t\tstatus: 500,\n\t\t\t\t\terror: new Error('Redirect loop'),\n\t\t\t\t\turl: info.url\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tif (this.router) {\n\t\t\t\t\tthis.router.goto(\n\t\t\t\t\t\tnew URL(navigation_result.redirect, info.url).href,\n\t\t\t\t\t\t{ replaceState: true },\n\t\t\t\t\t\t[...chain, info.url.pathname]\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tlocation.href = new URL(navigation_result.redirect, location.href).href;\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.updating = true;\n\n\t\tif (this.started) {\n\t\t\tthis.current = navigation_result.state;\n\n\t\t\tthis.root.$set(navigation_result.props);\n\t\t\tthis.stores.navigating.set(null);\n\t\t} else {\n\t\t\tthis._init(navigation_result);\n\t\t}\n\n\t\t// opts must be passed if we're navigating\n\t\tif (opts) {\n\t\t\tconst { scroll, keepfocus } = opts;\n\n\t\t\tif (!keepfocus) {\n\t\t\t\tgetSelection()?.removeAllRanges();\n\t\t\t\tdocument.body.focus();\n\t\t\t}\n\n\t\t\t// need to render the DOM before we can scroll to the rendered elements\n\t\t\tawait tick();\n\n\t\t\tif (this.autoscroll) {\n\t\t\t\tconst deep_linked = info.url.hash && document.getElementById(info.url.hash.slice(1));\n\t\t\t\tif (scroll) {\n\t\t\t\t\tscrollTo(scroll.x, scroll.y);\n\t\t\t\t} else if (deep_linked) {\n\t\t\t\t\t// Here we use `scrollIntoView` on the element instead of `scrollTo`\n\t\t\t\t\t// because it natively supports the `scroll-margin` and `scroll-behavior`\n\t\t\t\t\t// CSS properties.\n\t\t\t\t\tdeep_linked.scrollIntoView();\n\t\t\t\t} else {\n\t\t\t\t\tscrollTo(0, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// in this case we're simply invalidating\n\t\t\tawait tick();\n\t\t}\n\n\t\tthis.loading.promise = null;\n\t\tthis.loading.id = null;\n\t\tthis.autoscroll = true;\n\t\tthis.updating = false;\n\n\t\tif (!this.router) return;\n\n\t\tconst leaf_node = navigation_result.state.branch[navigation_result.state.branch.length - 1];\n\t\tif (leaf_node && leaf_node.module.router === false) {\n\t\t\tthis.router.disable();\n\t\t} else {\n\t\t\tthis.router.enable();\n\t\t}\n\t}\n\n\t/**\n\t * @param {import('./types').NavigationInfo} info\n\t * @returns {Promise<import('./types').NavigationResult>}\n\t */\n\tload(info) {\n\t\tthis.loading.promise = this._get_navigation_result(info, false);\n\t\tthis.loading.id = info.id;\n\n\t\treturn this.loading.promise;\n\t}\n\n\t/** @param {string} href */\n\tinvalidate(href) {\n\t\tthis.invalid.add(href);\n\n\t\tif (!this.invalidating) {\n\t\t\tthis.invalidating = Promise.resolve().then(async () => {\n\t\t\t\tconst info = this.router && this.router.parse(new URL(location.href));\n\t\t\t\tif (info) await this.update(info, [], true);\n\n\t\t\t\tthis.invalidating = null;\n\t\t\t});\n\t\t}\n\n\t\treturn this.invalidating;\n\t}\n\n\t/** @param {import('./types').NavigationResult} result */\n\t_init(result) {\n\t\tthis.current = result.state;\n\n\t\tconst style = document.querySelector('style[data-svelte]');\n\t\tif (style) style.remove();\n\n\t\tthis.root = new this.Root({\n\t\t\ttarget: this.target,\n\t\t\tprops: {\n\t\t\t\tstores: this.stores,\n\t\t\t\t...result.props\n\t\t\t},\n\t\t\thydrate: true\n\t\t});\n\n\t\tthis.started = true;\n\n\t\tif (this.router) {\n\t\t\tconst navigation = { from: null, to: new URL(location.href) };\n\t\t\tthis.router.callbacks.after_navigate.forEach((fn) => fn(navigation));\n\t\t}\n\t}\n\n\t/**\n\t * @param {import('./types').NavigationInfo} info\n\t * @param {boolean} no_cache\n\t * @returns {Promise<import('./types').NavigationResult>}\n\t */\n\tasync _get_navigation_result(info, no_cache) {\n\t\tif (this.loading.id === info.id && this.loading.promise) {\n\t\t\treturn this.loading.promise;\n\t\t}\n\n\t\tfor (let i = 0; i < info.routes.length; i += 1) {\n\t\t\tconst route = info.routes[i];\n\n\t\t\t// load code for subsequent routes immediately, if they are as\n\t\t\t// likely to match the current path/query as the current one\n\t\t\tlet j = i + 1;\n\t\t\twhile (j < info.routes.length) {\n\t\t\t\tconst next = info.routes[j];\n\t\t\t\tif (next[0].toString() === route[0].toString()) {\n\t\t\t\t\tnext[1].forEach((loader) => loader());\n\t\t\t\t\tj += 1;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst result = await this._load(\n\t\t\t\t{\n\t\t\t\t\troute,\n\t\t\t\t\tinfo\n\t\t\t\t},\n\t\t\t\tno_cache\n\t\t\t);\n\t\t\tif (result) return result;\n\t\t}\n\n\t\treturn await this._load_error({\n\t\t\tstatus: 404,\n\t\t\terror: new Error(`Not found: ${info.url.pathname}`),\n\t\t\turl: info.url\n\t\t});\n\t}\n\n\t/**\n\t *\n\t * @param {{\n\t *   url: URL;\n\t *   params: Record<string, string>;\n\t *   stuff: Record<string, any>;\n\t *   branch: Array<import('./types').BranchNode | undefined>;\n\t *   status: number;\n\t *   error?: Error;\n\t * }} opts\n\t */\n\tasync _get_navigation_result_from_branch({ url, params, stuff, branch, status, error }) {\n\t\tconst filtered = /** @type {import('./types').BranchNode[] } */ (branch.filter(Boolean));\n\t\tconst redirect = filtered.find((f) => f.loaded && f.loaded.redirect);\n\n\t\t/** @type {import('./types').NavigationResult} */\n\t\tconst result = {\n\t\t\tredirect: redirect && redirect.loaded ? redirect.loaded.redirect : undefined,\n\t\t\tstate: {\n\t\t\t\turl,\n\t\t\t\tparams,\n\t\t\t\tbranch,\n\t\t\t\tsession_id: this.session_id\n\t\t\t},\n\t\t\tprops: {\n\t\t\t\tcomponents: filtered.map((node) => node.module.default)\n\t\t\t}\n\t\t};\n\n\t\tfor (let i = 0; i < filtered.length; i += 1) {\n\t\t\tconst loaded = filtered[i].loaded;\n\t\t\tresult.props[`props_${i}`] = loaded ? await loaded.props : null;\n\t\t}\n\n\t\tif (!this.current.url || url.href !== this.current.url.href) {\n\t\t\tresult.props.page = { url, params, status, error, stuff };\n\n\t\t\t// TODO remove this for 1.0\n\t\t\t/**\n\t\t\t * @param {string} property\n\t\t\t * @param {string} replacement\n\t\t\t */\n\t\t\tconst print_error = (property, replacement) => {\n\t\t\t\tObject.defineProperty(result.props.page, property, {\n\t\t\t\t\tget: () => {\n\t\t\t\t\t\tthrow new Error(`$page.${property} has been replaced by $page.url.${replacement}`);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tprint_error('origin', 'origin');\n\t\t\tprint_error('path', 'pathname');\n\t\t\tprint_error('query', 'searchParams');\n\t\t}\n\n\t\tconst leaf = filtered[filtered.length - 1];\n\t\tconst maxage = leaf.loaded && leaf.loaded.maxage;\n\n\t\tif (maxage) {\n\t\t\tconst key = url.pathname + url.search; // omit hash\n\t\t\tlet ready = false;\n\n\t\t\tconst clear = () => {\n\t\t\t\tif (this.cache.get(key) === result) {\n\t\t\t\t\tthis.cache.delete(key);\n\t\t\t\t}\n\n\t\t\t\tunsubscribe();\n\t\t\t\tclearTimeout(timeout);\n\t\t\t};\n\n\t\t\tconst timeout = setTimeout(clear, maxage * 1000);\n\n\t\t\tconst unsubscribe = this.stores.session.subscribe(() => {\n\t\t\t\tif (ready) clear();\n\t\t\t});\n\n\t\t\tready = true;\n\n\t\t\tthis.cache.set(key, result);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * @param {{\n\t *   status?: number;\n\t *   error?: Error;\n\t *   module: CSRComponent;\n\t *   url: URL;\n\t *   params: Record<string, string>;\n\t *   stuff: Record<string, any>;\n\t * }} options\n\t * @returns\n\t */\n\tasync _load_node({ status, error, module, url, params, stuff }) {\n\t\t/** @type {import('./types').BranchNode} */\n\t\tconst node = {\n\t\t\tmodule,\n\t\t\tuses: {\n\t\t\t\tparams: new Set(),\n\t\t\t\turl: false,\n\t\t\t\tsession: false,\n\t\t\t\tstuff: false,\n\t\t\t\tdependencies: []\n\t\t\t},\n\t\t\tloaded: null,\n\t\t\tstuff\n\t\t};\n\n\t\t/** @type {Record<string, string>} */\n\t\tconst uses_params = {};\n\t\tfor (const key in params) {\n\t\t\tObject.defineProperty(uses_params, key, {\n\t\t\t\tget() {\n\t\t\t\t\tnode.uses.params.add(key);\n\t\t\t\t\treturn params[key];\n\t\t\t\t},\n\t\t\t\tenumerable: true\n\t\t\t});\n\t\t}\n\n\t\tconst session = this.$session;\n\n\t\tif (module.load) {\n\t\t\tconst { started } = this;\n\n\t\t\t/** @type {import('types/page').LoadInput | import('types/page').ErrorLoadInput} */\n\t\t\tconst load_input = {\n\t\t\t\tparams: uses_params,\n\t\t\t\tget url() {\n\t\t\t\t\tnode.uses.url = true;\n\t\t\t\t\treturn url;\n\t\t\t\t},\n\t\t\t\tget session() {\n\t\t\t\t\tnode.uses.session = true;\n\t\t\t\t\treturn session;\n\t\t\t\t},\n\t\t\t\tget stuff() {\n\t\t\t\t\tnode.uses.stuff = true;\n\t\t\t\t\treturn { ...stuff };\n\t\t\t\t},\n\t\t\t\tfetch(resource, info) {\n\t\t\t\t\tconst requested = typeof resource === 'string' ? resource : resource.url;\n\t\t\t\t\tconst { href } = new URL(requested, url);\n\t\t\t\t\tnode.uses.dependencies.push(href);\n\n\t\t\t\t\treturn started ? fetch(resource, info) : initial_fetch(resource, info);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif (import.meta.env.DEV) {\n\t\t\t\t// TODO remove this for 1.0\n\t\t\t\tObject.defineProperty(load_input, 'page', {\n\t\t\t\t\tget: () => {\n\t\t\t\t\t\tthrow new Error('`page` in `load` functions has been replaced by `url` and `params`');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (error) {\n\t\t\t\t/** @type {import('types/page').ErrorLoadInput} */ (load_input).status = status;\n\t\t\t\t/** @type {import('types/page').ErrorLoadInput} */ (load_input).error = error;\n\t\t\t}\n\n\t\t\tconst loaded = await module.load.call(null, load_input);\n\n\t\t\tif (!loaded) {\n\t\t\t\tthrow new Error('load function must return a value');\n\t\t\t}\n\n\t\t\tnode.loaded = normalize(loaded);\n\t\t\tif (node.loaded.stuff) node.stuff = node.loaded.stuff;\n\t\t}\n\n\t\treturn node;\n\t}\n\n\t/**\n\t * @param {import('./types').NavigationCandidate} selected\n\t * @param {boolean} no_cache\n\t * @returns {Promise<import('./types').NavigationResult | undefined>} undefined if fallthrough\n\t */\n\tasync _load({ route, info: { url, path } }, no_cache) {\n\t\tconst key = url.pathname + url.search;\n\n\t\tif (!no_cache) {\n\t\t\tconst cached = this.cache.get(key);\n\t\t\tif (cached) return cached;\n\t\t}\n\n\t\tconst [pattern, a, b, get_params] = route;\n\t\tconst params = get_params\n\t\t\t? // the pattern is for the route which we've already matched to this path\n\t\t\t  get_params(/** @type {RegExpExecArray}  */ (pattern.exec(path)))\n\t\t\t: {};\n\n\t\tconst changed = this.current.url && {\n\t\t\turl: key !== this.current.url.pathname + this.current.url.search,\n\t\t\tparams: Object.keys(params).filter((key) => this.current.params[key] !== params[key]),\n\t\t\tsession: this.session_id !== this.current.session_id\n\t\t};\n\n\t\t/** @type {Array<import('./types').BranchNode | undefined>} */\n\t\tlet branch = [];\n\n\t\t/** @type {Record<string, any>} */\n\t\tlet stuff = {};\n\t\tlet stuff_changed = false;\n\n\t\t/** @type {number | undefined} */\n\t\tlet status = 200;\n\n\t\t/** @type {Error | undefined} */\n\t\tlet error;\n\n\t\t// preload modules\n\t\ta.forEach((loader) => loader());\n\n\t\tload: for (let i = 0; i < a.length; i += 1) {\n\t\t\t/** @type {import('./types').BranchNode | undefined} */\n\t\t\tlet node;\n\n\t\t\ttry {\n\t\t\t\tif (!a[i]) continue;\n\n\t\t\t\tconst module = await a[i]();\n\t\t\t\tconst previous = this.current.branch[i];\n\n\t\t\t\tconst changed_since_last_render =\n\t\t\t\t\t!previous ||\n\t\t\t\t\tmodule !== previous.module ||\n\t\t\t\t\t(changed.url && previous.uses.url) ||\n\t\t\t\t\tchanged.params.some((param) => previous.uses.params.has(param)) ||\n\t\t\t\t\t(changed.session && previous.uses.session) ||\n\t\t\t\t\tprevious.uses.dependencies.some((dep) => this.invalid.has(dep)) ||\n\t\t\t\t\t(stuff_changed && previous.uses.stuff);\n\n\t\t\t\tif (changed_since_last_render) {\n\t\t\t\t\tnode = await this._load_node({\n\t\t\t\t\t\tmodule,\n\t\t\t\t\t\turl,\n\t\t\t\t\t\tparams,\n\t\t\t\t\t\tstuff\n\t\t\t\t\t});\n\n\t\t\t\t\tif (node && node.loaded) {\n\t\t\t\t\t\tif (node.loaded.fallthrough) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (node.loaded.error) {\n\t\t\t\t\t\t\tstatus = node.loaded.status;\n\t\t\t\t\t\t\terror = node.loaded.error;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (node.loaded.redirect) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tredirect: node.loaded.redirect,\n\t\t\t\t\t\t\t\tprops: {},\n\t\t\t\t\t\t\t\tstate: this.current\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (node.loaded.stuff) {\n\t\t\t\t\t\t\tstuff_changed = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tnode = previous;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tstatus = 500;\n\t\t\t\terror = coalesce_to_error(e);\n\t\t\t}\n\n\t\t\tif (error) {\n\t\t\t\twhile (i--) {\n\t\t\t\t\tif (b[i]) {\n\t\t\t\t\t\tlet error_loaded;\n\n\t\t\t\t\t\t/** @type {import('./types').BranchNode | undefined} */\n\t\t\t\t\t\tlet node_loaded;\n\t\t\t\t\t\tlet j = i;\n\t\t\t\t\t\twhile (!(node_loaded = branch[j])) {\n\t\t\t\t\t\t\tj -= 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\terror_loaded = await this._load_node({\n\t\t\t\t\t\t\t\tstatus,\n\t\t\t\t\t\t\t\terror,\n\t\t\t\t\t\t\t\tmodule: await b[i](),\n\t\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\t\tparams,\n\t\t\t\t\t\t\t\tstuff: node_loaded.stuff\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tif (error_loaded && error_loaded.loaded && error_loaded.loaded.error) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (error_loaded && error_loaded.loaded && error_loaded.loaded.stuff) {\n\t\t\t\t\t\t\t\tstuff = {\n\t\t\t\t\t\t\t\t\t...stuff,\n\t\t\t\t\t\t\t\t\t...error_loaded.loaded.stuff\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbranch = branch.slice(0, j + 1).concat(error_loaded);\n\t\t\t\t\t\t\tbreak load;\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn await this._load_error({\n\t\t\t\t\tstatus,\n\t\t\t\t\terror,\n\t\t\t\t\turl\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tif (node && node.loaded && node.loaded.stuff) {\n\t\t\t\t\tstuff = {\n\t\t\t\t\t\t...stuff,\n\t\t\t\t\t\t...node.loaded.stuff\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tbranch.push(node);\n\t\t\t}\n\t\t}\n\n\t\treturn await this._get_navigation_result_from_branch({\n\t\t\turl,\n\t\t\tparams,\n\t\t\tstuff,\n\t\t\tbranch,\n\t\t\tstatus,\n\t\t\terror\n\t\t});\n\t}\n\n\t/**\n\t * @param {{\n\t *   status: number;\n\t *   error: Error;\n\t *   url: URL;\n\t * }} opts\n\t */\n\tasync _load_error({ status, error, url }) {\n\t\t/** @type {Record<string, string>} */\n\t\tconst params = {}; // error page does not have params\n\n\t\tconst node = await this._load_node({\n\t\t\tmodule: await this.fallback[0],\n\t\t\turl,\n\t\t\tparams,\n\t\t\tstuff: {}\n\t\t});\n\t\tconst error_node = await this._load_node({\n\t\t\tstatus,\n\t\t\terror,\n\t\t\tmodule: await this.fallback[1],\n\t\t\turl,\n\t\t\tparams,\n\t\t\tstuff: (node && node.loaded && node.loaded.stuff) || {}\n\t\t});\n\n\t\tconst branch = [node, error_node];\n\t\tconst stuff = { ...node?.loaded?.stuff, ...error_node?.loaded?.stuff };\n\n\t\treturn await this._get_navigation_result_from_branch({\n\t\t\turl,\n\t\t\tparams,\n\t\t\tstuff,\n\t\t\tbranch,\n\t\t\tstatus,\n\t\t\terror\n\t\t});\n\t}\n}\n\n/**\n * @param {{\n *   paths: {\n *     assets: string;\n *     base: string;\n *   },\n *   target: Node;\n *   session: any;\n *   route: boolean;\n *   spa: boolean;\n *   trailing_slash: import('types/internal').TrailingSlash;\n *   hydrate: {\n *     status: number;\n *     error: Error;\n *     nodes: Array<Promise<import('types/internal').CSRComponent>>;\n *     url: URL;\n *     params: Record<string, string>;\n *   };\n * }} opts\n */\nasync function start({ paths, target, session, route, spa, trailing_slash, hydrate }) {\n\tif (import.meta.env.DEV && !target) {\n\t\tthrow new Error('Missing target element. See https://kit.svelte.dev/docs#configuration-target');\n\t}\n\n\tconst renderer = new Renderer({\n\t\tRoot,\n\t\tfallback,\n\t\ttarget,\n\t\tsession\n\t});\n\n\tconst router = route\n\t\t? new Router({\n\t\t\t\tbase: paths.base,\n\t\t\t\troutes,\n\t\t\t\ttrailing_slash,\n\t\t\t\trenderer\n\t\t  })\n\t\t: null;\n\n\tinit({ router, renderer });\n\tset_paths(paths);\n\n\tif (hydrate) await renderer.start(hydrate);\n\tif (router) {\n\t\tif (spa) router.goto(location.href, { replaceState: true }, []);\n\t\trouter.init_listeners();\n\t}\n\n\tdispatchEvent(new CustomEvent('sveltekit:start'));\n}\n\nexport { start };\n"],"names":["init"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;yCA8C6C;qBAApB,OAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sHAAS;2CAApB,QAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;yCAVS;qBAApB,OAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sHAAS;;;;2CAApB,QAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;yCAMW;qBAApB,OAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sHAAS;2CAApB,QAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;yCAJS;qBAApB,OAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sHAAS;;;;2CAApB,QAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;yCACU;qBAApB,OAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sHAAS;2CAApB,QAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAFhC,QAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iBAcX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AADN;;;;;UACM;;;;;;;;;;;;;;;;;;;;;;;;;eACH;;;4BAAA;;;;;;;oBAAA;;;;;;;;;;;;;;;;;QAjBC,QAAW;;;;;;kBAcX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QA5CO;QACA;QAEA;QACA,UAAU;QACV,UAAU;QACV,UAAU;AAErB,aAAW,cAAc;AAGzB,cAAY,OAAO,KAAK;MAEpB,UAAU;MACV,YAAY;MACZ,QAAQ;AAEZ;UACO,cAAc,OAAO,KAAK;UAC3B;wBACH,YAAY;wBACZ,QAAQ,SAAS,SAAS;AAAA;AAAA;oBAI5B,UAAU;WACH;AAAA;;;;;;;;;;;;;;;;;AAhBL,aAAO,KAAK,IAAI;AAAA;AAAA;;;;;;;;;;;;;;;;ACfpB,MAAM,IAAI;AAAA,EACT,MAAM;EACN,MAAM;EACN,MAAM;EACN,MAAM;EACN,MAAM;EACN,MAAM;;AAKA,MAAM,SAAS;AAAA,EAErB,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC,EAAE;AAAA,EAG1B,CAAC,mBAAmB,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC,EAAE;AAAA,EAGrC,CAAC,kBAAkB,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC,EAAE;AAAA,EAGpC,CAAC,cAAc,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC,EAAE;AAAA;AAK1B,MAAM,WAAW,CAAC,EAAE,MAAM,EAAE;AC1BnC,sBAAsB,KAAK;AAC1B,MAAI,UAAU,IAAI;AAElB,MAAI,CAAC,SAAS;AACb,UAAM,WAAW,IAAI,qBAAqB;AAC1C,cAAU,SAAS,SAAS,SAAS,GAAG,OAAO,IAAI;AAAA;AAGpD,SAAO;AAAA;ACRR,IAAI,OAAO;AAMX,mBAAmB,OAAO;AACzB,SAAO,MAAM;AACJ,QAAM,UAAU;AAAA;ACD1B,wBAAwB;AACvB,SAAO;AAAA,IACN,GAAG;AAAA,IACH,GAAG;AAAA;AAAA;AAQL,qBAAqB,OAAO;AAC3B,QAAM,OAAO,MACX,eACA,KAAK,CAAC,MAAM,aAAa,QAAQ,EAAE,SAAS,kBAAkB;AAChE,SAAmE;AAAA;AAOpE,kBAAkB,MAAM;AACvB,SAAO,gBAAgB,cACpB,IAAI,IAAI,KAAK,KAAK,SAAS,SAAS,WACpC,IAAI,IAAI,KAAK;AAAA;AAGjB,aAAa;AAAA,EASZ,YAAY,EAAE,aAAM,iBAAQ,gBAAgB,YAAY;;AACvD,SAAK,OAAO;AACZ,SAAK,SAAS;AACd,SAAK,iBAAiB;AAEtB,SAAK,aAAa;AAGlB,SAAK,WAAW;AAChB,aAAS,SAAS;AAElB,SAAK,UAAU;AAGf,aAAS,KAAK,aAAa,YAAY;AAGvC,SAAK,wBAAwB,oBAAQ,UAAR,mBAAgB,uBAAhB,YAAsC;AAEnE,QAAI,KAAK,0BAA0B,GAAG;AAErC,cAAQ,aAAa,iCAAK,QAAQ,QAAb,EAAoB,mBAAmB,MAAK,IAAI,SAAS;AAAA;AAG/E,SAAK,YAAY;AAAA,MAEhB,iBAAiB;AAAA,MAGjB,gBAAgB;AAAA;AAAA;AAAA,EAIlB,iBAAiB;AAChB,QAAI,uBAAuB,SAAS;AACnC,cAAQ,oBAAoB;AAAA;AAO7B,qBAAiB,gBAAgB,CAAC,MAAM;AACvC,UAAI,eAAe;AAEnB,YAAM,SAAS;AAAA,QACd,MAAM,KAAK,SAAS,QAAQ;AAAA,QAC5B,IAAI;AAAA,QACJ,QAAQ,MAAO,eAAe;AAAA;AAG/B,WAAK,UAAU,gBAAgB,QAAQ,CAAC,OAAO,GAAG;AAElD,UAAI,cAAc;AACjB,UAAE;AACF,UAAE,cAAc;AAAA,aACV;AACN,gBAAQ,oBAAoB;AAAA;AAAA;AAK9B,qBAAiB,QAAQ,MAAM;AAC9B,cAAQ,oBAAoB;AAAA;AAO7B,QAAI;AACJ,qBAAiB,UAAU,MAAM;AAChC,mBAAa;AACb,qBAAe,WAAW,MAAM;AAG/B,cAAM,YAAY,iCACb,QAAQ,SAAS,KADJ;AAAA,UAEjB,oBAAoB;AAAA;AAErB,gBAAQ,aAAa,WAAW,SAAS,OAAO,OAAO,SAAS;AAAA,SAE9D;AAAA;AAIJ,UAAM,mBAAmB,CAAC,UAAU;AACnC,YAAM,IAAI,YAAY;AACtB,UAAI,KAAK,EAAE,QAAQ,EAAE,aAAa,uBAAuB;AACxD,aAAK,SAAS,SAAS;AAAA;AAAA;AAKzB,QAAI;AAGJ,UAAM,mBAAmB,CAAC,UAAU;AACnC,mBAAa;AACb,0BAAoB,WAAW,MAAM;;AAGpC,oBAAM,WAAN,mBAAc,cACb,IAAI,YAAY,8BAA8B,EAAE,SAAS;AAAA,SAExD;AAAA;AAGJ,qBAAiB,cAAc;AAC/B,qBAAiB,aAAa;AAC9B,qBAAiB,8BAA8B;AAG/C,qBAAiB,SAAS,CAAC,UAAU;AACpC,UAAI,CAAC,KAAK;AAAS;AAInB,UAAI,MAAM,UAAU,MAAM,UAAU;AAAG;AACvC,UAAI,MAAM,WAAW,MAAM,WAAW,MAAM,YAAY,MAAM;AAAQ;AACtE,UAAI,MAAM;AAAkB;AAE5B,YAAM,IAAI,YAAY;AACtB,UAAI,CAAC;AAAG;AAER,UAAI,CAAC,EAAE;AAAM;AAEb,YAAM,MAAM,SAAS;AACrB,YAAM,aAAa,IAAI;AACvB,UAAI,eAAe,SAAS,MAAM;AACjC,YAAI,CAAC,SAAS;AAAM,gBAAM;AAC1B;AAAA;AAMD,YAAM,MAAO,GAAE,aAAa,UAAU,IAAI,MAAM;AAEhD,UAAI,EAAE,aAAa,eAAgB,OAAO,IAAI,SAAS,aAAc;AACpE;AAAA;AAID,UAAI,aAAa,cAAc,EAAE,OAAO,UAAU,EAAE;AAAQ;AAG5D,UAAI,IAAI,KAAK,MAAM,KAAK,OAAO,SAAS,KAAK,MAAM,KAAK,IAAI;AAG3D,mBAAW,MAAM,QAAQ,UAAU,IAAI,IAAI,IAAI;AAC/C,cAAM,OAAO,KAAK,MAAM;AACxB,YAAI,MAAM;AACT,iBAAO,KAAK,SAAS,OAAO,MAAM,IAAI;AAAA;AAEvC;AAAA;AAGD,WAAK,UAAU;AAAA,QACd;AAAA,QACA,QAAQ,EAAE,aAAa,wBAAwB,iBAAiB;AAAA,QAChE,WAAW;AAAA,QACX,OAAO;AAAA,QACP,SAAS;AAAA,UACR,OAAO;AAAA,UACP,cAAc;AAAA;AAAA,QAEf,UAAU,MAAM,MAAM;AAAA,QACtB,SAAS,MAAM,MAAM;AAAA;AAAA;AAIvB,qBAAiB,YAAY,CAAC,UAAU;AACvC,UAAI,MAAM,SAAS,KAAK,SAAS;AAGhC,YAAI,MAAM,MAAM,uBAAuB,KAAK;AAAuB;AAEnE,aAAK,UAAU;AAAA,UACd,KAAK,IAAI,IAAI,SAAS;AAAA,UACtB,QAAQ,MAAM,MAAM;AAAA,UACpB,WAAW;AAAA,UACX,OAAO;AAAA,UACP,SAAS;AAAA,UACT,UAAU,MAAM;AACf,iBAAK,wBAAwB,MAAM,MAAM;AAAA;AAAA,UAE1C,SAAS,MAAM;AACd,kBAAM,QAAQ,KAAK,wBAAwB,MAAM,MAAM;AACvD,oBAAQ,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWhB,KAAK,KAAK;AACT,WAAO,IAAI,WAAW,SAAS,UAAU,IAAI,SAAS,WAAW,KAAK;AAAA;AAAA,EAOvE,MAAM,KAAK;AACV,QAAI,KAAK,KAAK,MAAM;AACnB,YAAM,OAAO,UAAU,IAAI,SAAS,MAAM,KAAK,KAAK,WAAW;AAE/D,aAAO;AAAA,QACN,IAAI,IAAI,WAAW,IAAI;AAAA,QACvB,QAAQ,KAAK,OAAO,OAAO,CAAC,CAAC,aAAa,QAAQ,KAAK;AAAA,QACvD;AAAA,QACA;AAAA;AAAA;AAAA;AAAA,QAYG,KACL,MACA,EAAE,WAAW,OAAO,eAAe,OAAO,YAAY,OAAO,QAAQ,OAAO,IAC5E,OACC;AACD,UAAM,MAAM,IAAI,IAAI,MAAM,aAAa;AAEvC,QAAI,KAAK,SAAS;AACjB,aAAO,KAAK,UAAU;AAAA,QACrB;AAAA,QACA,QAAQ,WAAW,iBAAiB;AAAA,QACpC;AAAA,QACA;AAAA,QACA,SAAS;AAAA,UACR;AAAA,UACA;AAAA;AAAA,QAED,UAAU,MAAM;AAAA;AAAA,QAChB,SAAS,MAAM;AAAA;AAAA;AAAA;AAIjB,aAAS,OAAO,IAAI;AACpB,WAAO,IAAI,QAAQ,MAAM;AAAA;AAAA;AAAA,EAK1B,SAAS;AACR,SAAK,UAAU;AAAA;AAAA,EAGhB,UAAU;AACT,SAAK,UAAU;AAAA;AAAA,QAOV,SAAS,KAAK;AACnB,UAAM,OAAO,KAAK,MAAM;AAExB,QAAI,CAAC,MAAM;AACV,YAAM,IAAI,MAAM;AAAA;AAGjB,WAAO,KAAK,SAAS,KAAK;AAAA;AAAA,EAI3B,eAAe,IAAI;AAClB,YAAQ,MAAM;AACb,WAAK,UAAU,eAAe,KAAK;AAEnC,aAAO,MAAM;AACZ,cAAM,IAAI,KAAK,UAAU,eAAe,QAAQ;AAChD,aAAK,UAAU,eAAe,OAAO,GAAG;AAAA;AAAA;AAAA;AAAA,EAQ3C,gBAAgB,IAAI;AACnB,YAAQ,MAAM;AACb,WAAK,UAAU,gBAAgB,KAAK;AAEpC,aAAO,MAAM;AACZ,cAAM,IAAI,KAAK,UAAU,gBAAgB,QAAQ;AACjD,aAAK,UAAU,gBAAgB,OAAO,GAAG;AAAA;AAAA;AAAA;AAAA,QAmBtC,UAAU,EAAE,KAAK,QAAQ,WAAW,OAAO,SAAS,UAAU,WAAW;AAC9E,UAAM,OAAO,KAAK,SAAS,QAAQ;AACnC,QAAI,eAAe;AAEnB,UAAM,SAAS;AAAA,MACd;AAAA,MACA,IAAI;AAAA,MACJ,QAAQ,MAAO,eAAe;AAAA;AAG/B,SAAK,UAAU,gBAAgB,QAAQ,CAAC,OAAO,GAAG;AAElD,QAAI,cAAc;AACjB;AACA;AAAA;AAGD,UAAM,OAAO,KAAK,MAAM;AACxB,QAAI,CAAC,MAAM;AACV,eAAS,OAAO,IAAI;AACpB,aAAO,IAAI,QAAQ,MAAM;AAAA;AAAA;AAK1B;AAEA,QAAI,CAAC,KAAK,YAAY;AACrB,oBAAc,IAAI,YAAY;AAAA;AAE/B,SAAK;AAEL,QAAI,EAAE,aAAa;AAEnB,QAAI,KAAK,mBAAmB,SAAS;AACpC,UAAI,aAAa,OAAO,SAAS,SAAS;AAAM,mBAAW,SAAS,MAAM,GAAG;AAAA,eACnE,KAAK,mBAAmB,UAAU;AAC5C,YAAM,UAAiC,IAAI,SAAS,MAAM,KAAK,MAAO,SAAS;AAC/E,UAAI,CAAC,WAAW,CAAC,SAAS,SAAS;AAAM,oBAAY;AAAA;AAGtD,SAAK,MAAM,IAAI,IAAI,IAAI,SAAS,WAAW,IAAI,SAAS,IAAI;AAE5D,QAAI,SAAS;AACZ,YAAM,SAAS,QAAQ,eAAe,IAAI;AAC1C,cAAQ,MAAM,qBAAqB,KAAK,yBAAyB;AACjE,cAAQ,QAAQ,eAAe,iBAAiB,aAAa,QAAQ,OAAO,IAAI,KAAK;AAAA;AAGtF,UAAM,KAAK,SAAS,kBAAkB,MAAM,OAAO,OAAO;AAAA,MACzD;AAAA,MACA;AAAA;AAGD,SAAK;AACL,QAAI,CAAC,KAAK,YAAY;AACrB,oBAAc,IAAI,YAAY;AAE9B,YAAM,aAAa,EAAE,MAAM,IAAI;AAC/B,WAAK,UAAU,eAAe,QAAQ,CAAC,OAAO,GAAG;AAAA;AAAA;AAAA;AASpD,2BAA2B,KAAK;AAC/B,SAAO,eAAe,SACpB,OAA2B,IAAK,QAA4B,IAAK,UAC1C,MACtB,IAAI,MAAM,KAAK,UAAU;AAAA;AAO7B,cAAc,OAAO;AACpB,MAAI,QAAO;AACX,MAAI,IAAI,MAAM;AAEd,MAAI,OAAO,UAAU,UAAU;AAC9B,WAAO;AAAG,cAAQ,QAAO,KAAM,MAAM,WAAW,EAAE;AAAA,SAC5C;AACN,WAAO;AAAG,cAAQ,QAAO,KAAM,MAAM,EAAE;AAAA;AAGxC,SAAQ,WAAS,GAAG,SAAS;AAAA;AAO9B,mBAAmB,QAAQ;AAC1B,QAAM,mBACL,OAAO,UAAU,OAAO,UAAU,OAAO,OAAO,UAAU,OAAO,CAAC,OAAO;AAC1E,MAAI,OAAO,SAAS,kBAAkB;AACrC,UAAM,SAAS,OAAO;AAEtB,QAAI,CAAC,OAAO,SAAS,kBAAkB;AACtC,aAAO;AAAA,QACN,QAAQ,UAAU;AAAA,QAClB,OAAO,IAAI;AAAA;AAAA;AAIb,UAAM,QAAQ,OAAO,OAAO,UAAU,WAAW,IAAI,MAAM,OAAO,SAAS,OAAO;AAElF,QAAI,CAAE,kBAAiB,QAAQ;AAC9B,aAAO;AAAA,QACN,QAAQ;AAAA,QACR,OAAO,IAAI,MACV,+FAA+F,OAAO;AAAA;AAAA;AAKzG,QAAI,CAAC,UAAU,SAAS,OAAO,SAAS,KAAK;AAC5C,cAAQ,KAAK;AACb,aAAO,EAAE,QAAQ,KAAK;AAAA;AAGvB,WAAO,EAAE,QAAQ;AAAA;AAGlB,MAAI,OAAO,UAAU;AACpB,QAAI,CAAC,OAAO,UAAU,KAAK,MAAM,OAAO,SAAS,SAAS,GAAG;AAC5D,aAAO;AAAA,QACN,QAAQ;AAAA,QACR,OAAO,IAAI,MACV;AAAA;AAAA;AAKH,QAAI,OAAO,OAAO,aAAa,UAAU;AACxC,aAAO;AAAA,QACN,QAAQ;AAAA,QACR,OAAO,IAAI,MAAM;AAAA;AAAA;AAAA;AAMpB,MAAwB,OAAQ,SAAS;AACxC,UAAM,IAAI,MACT;AAAA;AAKF,SAAqE;AAAA;AAStE,0BAA0B,OAAO;AAChC,QAAM,QAAQ,SAAS;AACvB,MAAI,QAAQ;AAEZ,oBAAkB;AACjB,YAAQ;AACR,UAAM,OAAO,CAAC,QAAQ;AAAA;AAIvB,eAAa,WAAW;AACvB,YAAQ;AACR,UAAM,IAAI;AAAA;AAIX,qBAAmB,KAAK;AAEvB,QAAI;AACJ,WAAO,MAAM,UAAU,CAAC,cAAc;AACrC,UAAI,cAAc,UAAc,SAAS,cAAc,WAAY;AAClE,YAAK,YAAY;AAAA;AAAA;AAAA;AAKpB,SAAO,EAAE,QAAQ,KAAK;AAAA;AAOvB,uBAAuB,UAAU,MAAM;AACtC,QAAM,MAAM,OAAO,aAAa,WAAW,WAAW,SAAS;AAE/D,MAAI,WAAW,4CAA4C,KAAK,UAAU;AAE1E,MAAI,QAAQ,OAAO,KAAK,SAAS,UAAU;AAC1C,gBAAY,eAAe,KAAK,KAAK;AAAA;AAGtC,QAAM,SAAS,SAAS,cAAc;AACtC,MAAI,UAAU,OAAO,aAAa;AACjC,UAA0B,UAAK,MAAM,OAAO,cAApC,WAAkB,IAAT,kBAAS,IAAT,CAAT;AACR,WAAO,QAAQ,QAAQ,IAAI,SAAS,MAAM;AAAA;AAG3C,SAAO,MAAM,UAAU;AAAA;AAGxB,eAAe;AAAA,EASd,YAAY,EAAE,aAAM,qBAAU,QAAQ,WAAW;AAChD,SAAK,OAAO;AACZ,SAAK,WAAW;AAGhB,SAAK;AAEL,SAAK,SAAS;AAEd,SAAK,UAAU;AAEf,SAAK,aAAa;AAClB,SAAK,UAAU,IAAI;AACnB,SAAK,eAAe;AACpB,SAAK,aAAa;AAClB,SAAK,WAAW;AAGhB,SAAK,UAAU;AAAA,MAEd,KAAK;AAAA,MACL,YAAY;AAAA,MACZ,QAAQ;AAAA;AAIT,SAAK,QAAQ,IAAI;AAGjB,SAAK,UAAU;AAAA,MACd,IAAI;AAAA,MACJ,SAAS;AAAA;AAGV,SAAK,SAAS;AAAA,MACb,KAAK,iBAAiB;AAAA,MACtB,MAAM,iBAAiB;AAAA,MACvB,YAAY,SAA2C;AAAA,MACvD,SAAS,SAAS;AAAA;AAGnB,SAAK,WAAW;AAEhB,SAAK,OAAO;AAEZ,QAAI,QAAQ;AACZ,SAAK,OAAO,QAAQ,UAAU,OAAO,UAAU;AAC9C,WAAK,WAAW;AAEhB,UAAI,CAAC,SAAS,CAAC,KAAK;AAAQ;AAC5B,WAAK,cAAc;AAEnB,YAAM,OAAO,KAAK,OAAO,MAAM,IAAI,IAAI,SAAS;AAChD,UAAI;AAAM,aAAK,OAAO,MAAM,IAAI;AAAA;AAEjC,YAAQ;AAAA;AAAA,EAGT,0BAA0B;AAKzB,QAAI,KAAK,YAAY,CAAC,KAAK,SAAS;AACnC,WAAK,aAAa;AAAA;AAAA;AAAA,QAad,MAAM,EAAE,QAAQ,OAAO,OAAO,KAAK,UAAU;AAElD,UAAM,SAAS;AAGf,QAAI,QAAQ;AAGZ,QAAI;AAEJ,QAAI;AAGJ,QAAI,OAAO,OAAO,SAAS;AAE3B,QAAI;AACH,eAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK,GAAG;AACzC,cAAM,UAAU,MAAM,MAAM,SAAS;AAErC,cAAM,OAAO,MAAM,KAAK,WAAW;AAAA,UAClC,QAAQ,MAAM,MAAM;AAAA,UACpB;AAAA,UACA;AAAA,UACA;AAAA,UACA,QAAQ,UAAU,SAAS;AAAA,UAC3B,OAAO,UAAU,QAAQ;AAAA;AAG1B,eAAO,KAAK;AAEZ,YAAI,QAAQ,KAAK,QAAQ;AACxB,cAAI,KAAK,OAAO,OAAO;AACtB,gBAAI;AAAO,oBAAM,KAAK,OAAO;AAC7B,yBAAa;AAAA,cACZ,QAAQ,KAAK,OAAO;AAAA,cACpB,OAAO,KAAK,OAAO;AAAA,cACnB;AAAA;AAAA,qBAES,KAAK,OAAO,OAAO;AAC7B,oBAAQ,kCACJ,QACA,KAAK,OAAO;AAAA;AAAA;AAAA;AAMnB,eAAS,aACN,MAAM,KAAK,YAAY,cACvB,MAAM,KAAK,mCAAmC;AAAA,QAC9C;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA;AAAA,aAEK,GAAP;AACD,UAAI;AAAO,cAAM;AAEjB,eAAS,MAAM,KAAK,YAAY;AAAA,QAC/B,QAAQ;AAAA,QACR,OAAO,kBAAkB;AAAA,QACzB;AAAA;AAAA;AAIF,QAAI,OAAO,UAAU;AAGpB,eAAS,OAAO,IAAI,IAAI,OAAO,UAAU,SAAS,MAAM;AACxD;AAAA;AAGD,SAAK,MAAM;AAAA;AAAA,QASN,kBAAkB,MAAM,OAAO,UAAU,MAAM;AACpD,QAAI,KAAK,SAAS;AACjB,WAAK,OAAO,WAAW,IAAI;AAAA,QAC1B,MAAM,KAAK,QAAQ;AAAA,QACnB,IAAI,KAAK;AAAA;AAAA;AAIX,UAAM,KAAK,OAAO,MAAM,OAAO,UAAU;AAAA;AAAA,QASpC,OAAO,MAAM,OAAO,UAAU,MAAM;;AACzC,UAAM,QAAS,KAAK,QAAQ;AAC5B,QAAI,oBAAoB,MAAM,KAAK,uBAAuB,MAAM;AAGhE,QAAI,UAAU,KAAK;AAAO;AAE1B,SAAK,QAAQ;AAEb,QAAI,kBAAkB,UAAU;AAC/B,UAAI,MAAM,SAAS,MAAM,MAAM,SAAS,KAAK,IAAI,WAAW;AAC3D,4BAAoB,MAAM,KAAK,YAAY;AAAA,UAC1C,QAAQ;AAAA,UACR,OAAO,IAAI,MAAM;AAAA,UACjB,KAAK,KAAK;AAAA;AAAA,aAEL;AACN,YAAI,KAAK,QAAQ;AAChB,eAAK,OAAO,KACX,IAAI,IAAI,kBAAkB,UAAU,KAAK,KAAK,MAC9C,EAAE,cAAc,QAChB,CAAC,GAAG,OAAO,KAAK,IAAI;AAAA,eAEf;AACN,mBAAS,OAAO,IAAI,IAAI,kBAAkB,UAAU,SAAS,MAAM;AAAA;AAGpE;AAAA;AAAA;AAIF,SAAK,WAAW;AAEhB,QAAI,KAAK,SAAS;AACjB,WAAK,UAAU,kBAAkB;AAEjC,WAAK,KAAK,KAAK,kBAAkB;AACjC,WAAK,OAAO,WAAW,IAAI;AAAA,WACrB;AACN,WAAK,MAAM;AAAA;AAIZ,QAAI,MAAM;AACT,YAAM,EAAE,QAAQ,cAAc;AAE9B,UAAI,CAAC,WAAW;AACf,oDAAgB;AAChB,iBAAS,KAAK;AAAA;AAIf,YAAM;AAEN,UAAI,KAAK,YAAY;AACpB,cAAM,cAAc,KAAK,IAAI,QAAQ,SAAS,eAAe,KAAK,IAAI,KAAK,MAAM;AACjF,YAAI,QAAQ;AACX,mBAAS,OAAO,GAAG,OAAO;AAAA,mBAChB,aAAa;AAIvB,sBAAY;AAAA,eACN;AACN,mBAAS,GAAG;AAAA;AAAA;AAAA,WAGR;AAEN,YAAM;AAAA;AAGP,SAAK,QAAQ,UAAU;AACvB,SAAK,QAAQ,KAAK;AAClB,SAAK,aAAa;AAClB,SAAK,WAAW;AAEhB,QAAI,CAAC,KAAK;AAAQ;AAElB,UAAM,YAAY,kBAAkB,MAAM,OAAO,kBAAkB,MAAM,OAAO,SAAS;AACzF,QAAI,aAAa,UAAU,OAAO,WAAW,OAAO;AACnD,WAAK,OAAO;AAAA,WACN;AACN,WAAK,OAAO;AAAA;AAAA;AAAA,EAQd,KAAK,MAAM;AACV,SAAK,QAAQ,UAAU,KAAK,uBAAuB,MAAM;AACzD,SAAK,QAAQ,KAAK,KAAK;AAEvB,WAAO,KAAK,QAAQ;AAAA;AAAA,EAIrB,WAAW,MAAM;AAChB,SAAK,QAAQ,IAAI;AAEjB,QAAI,CAAC,KAAK,cAAc;AACvB,WAAK,eAAe,QAAQ,UAAU,KAAK,YAAY;AACtD,cAAM,OAAO,KAAK,UAAU,KAAK,OAAO,MAAM,IAAI,IAAI,SAAS;AAC/D,YAAI;AAAM,gBAAM,KAAK,OAAO,MAAM,IAAI;AAEtC,aAAK,eAAe;AAAA;AAAA;AAItB,WAAO,KAAK;AAAA;AAAA,EAIb,MAAM,QAAQ;AACb,SAAK,UAAU,OAAO;AAEtB,UAAM,QAAQ,SAAS,cAAc;AACrC,QAAI;AAAO,YAAM;AAEjB,SAAK,OAAO,IAAI,KAAK,KAAK;AAAA,MACzB,QAAQ,KAAK;AAAA,MACb,OAAO;AAAA,QACN,QAAQ,KAAK;AAAA,SACV,OAAO;AAAA,MAEX,SAAS;AAAA;AAGV,SAAK,UAAU;AAEf,QAAI,KAAK,QAAQ;AAChB,YAAM,aAAa,EAAE,MAAM,MAAM,IAAI,IAAI,IAAI,SAAS;AACtD,WAAK,OAAO,UAAU,eAAe,QAAQ,CAAC,OAAO,GAAG;AAAA;AAAA;AAAA,QASpD,uBAAuB,MAAM,UAAU;AAC5C,QAAI,KAAK,QAAQ,OAAO,KAAK,MAAM,KAAK,QAAQ,SAAS;AACxD,aAAO,KAAK,QAAQ;AAAA;AAGrB,aAAS,IAAI,GAAG,IAAI,KAAK,OAAO,QAAQ,KAAK,GAAG;AAC/C,YAAM,QAAQ,KAAK,OAAO;AAI1B,UAAI,IAAI,IAAI;AACZ,aAAO,IAAI,KAAK,OAAO,QAAQ;AAC9B,cAAM,OAAO,KAAK,OAAO;AACzB,YAAI,KAAK,GAAG,eAAe,MAAM,GAAG,YAAY;AAC/C,eAAK,GAAG,QAAQ,CAAC,WAAW;AAC5B,eAAK;AAAA,eACC;AACN;AAAA;AAAA;AAIF,YAAM,SAAS,MAAM,KAAK,MACzB;AAAA,QACC;AAAA,QACA;AAAA,SAED;AAED,UAAI;AAAQ,eAAO;AAAA;AAGpB,WAAO,MAAM,KAAK,YAAY;AAAA,MAC7B,QAAQ;AAAA,MACR,OAAO,IAAI,MAAM,cAAc,KAAK,IAAI;AAAA,MACxC,KAAK,KAAK;AAAA;AAAA;AAAA,QAeN,mCAAmC,EAAE,KAAK,QAAQ,OAAO,QAAQ,QAAQ,SAAS;AACvF,UAAM,WAA2D,OAAO,OAAO;AAC/E,UAAM,WAAW,SAAS,KAAK,CAAC,MAAM,EAAE,UAAU,EAAE,OAAO;AAG3D,UAAM,SAAS;AAAA,MACd,UAAU,YAAY,SAAS,SAAS,SAAS,OAAO,WAAW;AAAA,MACnE,OAAO;AAAA,QACN;AAAA,QACA;AAAA,QACA;AAAA,QACA,YAAY,KAAK;AAAA;AAAA,MAElB,OAAO;AAAA,QACN,YAAY,SAAS,IAAI,CAAC,SAAS,KAAK,OAAO;AAAA;AAAA;AAIjD,aAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK,GAAG;AAC5C,YAAM,SAAS,SAAS,GAAG;AAC3B,aAAO,MAAM,SAAS,OAAO,SAAS,MAAM,OAAO,QAAQ;AAAA;AAG5D,QAAI,CAAC,KAAK,QAAQ,OAAO,IAAI,SAAS,KAAK,QAAQ,IAAI,MAAM;AAC5D,aAAO,MAAM,OAAO,EAAE,KAAK,QAAQ,QAAQ,OAAO;AAOlD,YAAM,cAAc,CAAC,UAAU,gBAAgB;AAC9C,eAAO,eAAe,OAAO,MAAM,MAAM,UAAU;AAAA,UAClD,KAAK,MAAM;AACV,kBAAM,IAAI,MAAM,SAAS,2CAA2C;AAAA;AAAA;AAAA;AAKvE,kBAAY,UAAU;AACtB,kBAAY,QAAQ;AACpB,kBAAY,SAAS;AAAA;AAGtB,UAAM,OAAO,SAAS,SAAS,SAAS;AACxC,UAAM,SAAS,KAAK,UAAU,KAAK,OAAO;AAE1C,QAAI,QAAQ;AACX,YAAM,MAAM,IAAI,WAAW,IAAI;AAC/B,UAAI,QAAQ;AAEZ,YAAM,QAAQ,MAAM;AACnB,YAAI,KAAK,MAAM,IAAI,SAAS,QAAQ;AACnC,eAAK,MAAM,OAAO;AAAA;AAGnB;AACA,qBAAa;AAAA;AAGd,YAAM,UAAU,WAAW,OAAO,SAAS;AAE3C,YAAM,cAAc,KAAK,OAAO,QAAQ,UAAU,MAAM;AACvD,YAAI;AAAO;AAAA;AAGZ,cAAQ;AAER,WAAK,MAAM,IAAI,KAAK;AAAA;AAGrB,WAAO;AAAA;AAAA,QAcF,WAAW,EAAE,QAAQ,OAAO,QAAQ,KAAK,QAAQ,SAAS;AAE/D,UAAM,OAAO;AAAA,MACZ;AAAA,MACA,MAAM;AAAA,QACL,QAAQ,IAAI;AAAA,QACZ,KAAK;AAAA,QACL,SAAS;AAAA,QACT,OAAO;AAAA,QACP,cAAc;AAAA;AAAA,MAEf,QAAQ;AAAA,MACR;AAAA;AAID,UAAM,cAAc;AACpB,eAAW,OAAO,QAAQ;AACzB,aAAO,eAAe,aAAa,KAAK;AAAA,QACvC,MAAM;AACL,eAAK,KAAK,OAAO,IAAI;AACrB,iBAAO,OAAO;AAAA;AAAA,QAEf,YAAY;AAAA;AAAA;AAId,UAAM,UAAU,KAAK;AAErB,QAAI,OAAO,MAAM;AAChB,YAAM,EAAE,YAAY;AAGpB,YAAM,aAAa;AAAA,QAClB,QAAQ;AAAA,YACJ,MAAM;AACT,eAAK,KAAK,MAAM;AAChB,iBAAO;AAAA;AAAA,YAEJ,UAAU;AACb,eAAK,KAAK,UAAU;AACpB,iBAAO;AAAA;AAAA,YAEJ,QAAQ;AACX,eAAK,KAAK,QAAQ;AAClB,iBAAO,mBAAK;AAAA;AAAA,QAEb,MAAM,UAAU,MAAM;AACrB,gBAAM,YAAY,OAAO,aAAa,WAAW,WAAW,SAAS;AACrE,gBAAM,EAAE,SAAS,IAAI,IAAI,WAAW;AACpC,eAAK,KAAK,aAAa,KAAK;AAE5B,iBAAO,UAAU,MAAM,UAAU,QAAQ,cAAc,UAAU;AAAA;AAAA;AAanE,UAAI,OAAO;AACyC,QAAC,WAAY,SAAS;AACtB,QAAC,WAAY,QAAQ;AAAA;AAGzE,YAAM,SAAS,MAAM,OAAO,KAAK,KAAK,MAAM;AAE5C,UAAI,CAAC,QAAQ;AACZ,cAAM,IAAI,MAAM;AAAA;AAGjB,WAAK,SAAS,UAAU;AACxB,UAAI,KAAK,OAAO;AAAO,aAAK,QAAQ,KAAK,OAAO;AAAA;AAGjD,WAAO;AAAA;AAAA,QAQF,MAAM,EAAE,OAAO,MAAM,EAAE,KAAK,UAAU,UAAU;AACrD,UAAM,MAAM,IAAI,WAAW,IAAI;AAE/B,QAAI,CAAC,UAAU;AACd,YAAM,SAAS,KAAK,MAAM,IAAI;AAC9B,UAAI;AAAQ,eAAO;AAAA;AAGpB,UAAM,CAAC,SAAS,GAAG,GAAG,cAAc;AACpC,UAAM,SAAS,aAEZ,WAA4C,QAAQ,KAAK,SACzD;AAEH,UAAM,UAAU,KAAK,QAAQ,OAAO;AAAA,MACnC,KAAK,QAAQ,KAAK,QAAQ,IAAI,WAAW,KAAK,QAAQ,IAAI;AAAA,MAC1D,QAAQ,OAAO,KAAK,QAAQ,OAAO,CAAC,SAAQ,KAAK,QAAQ,OAAO,UAAS,OAAO;AAAA,MAChF,SAAS,KAAK,eAAe,KAAK,QAAQ;AAAA;AAI3C,QAAI,SAAS;AAGb,QAAI,QAAQ;AACZ,QAAI,gBAAgB;AAGpB,QAAI,SAAS;AAGb,QAAI;AAGJ,MAAE,QAAQ,CAAC,WAAW;AAEtB;AAAM,eAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,KAAK,GAAG;AAE3C,YAAI;AAEJ,YAAI;AACH,cAAI,CAAC,EAAE;AAAI;AAEX,gBAAM,SAAS,MAAM,EAAE;AACvB,gBAAM,WAAW,KAAK,QAAQ,OAAO;AAErC,gBAAM,4BACL,CAAC,YACD,WAAW,SAAS,UACnB,QAAQ,OAAO,SAAS,KAAK,OAC9B,QAAQ,OAAO,KAAK,CAAC,UAAU,SAAS,KAAK,OAAO,IAAI,WACvD,QAAQ,WAAW,SAAS,KAAK,WAClC,SAAS,KAAK,aAAa,KAAK,CAAC,QAAQ,KAAK,QAAQ,IAAI,SACzD,iBAAiB,SAAS,KAAK;AAEjC,cAAI,2BAA2B;AAC9B,mBAAO,MAAM,KAAK,WAAW;AAAA,cAC5B;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA;AAGD,gBAAI,QAAQ,KAAK,QAAQ;AACxB,kBAAI,KAAK,OAAO,aAAa;AAC5B;AAAA;AAED,kBAAI,KAAK,OAAO,OAAO;AACtB,yBAAS,KAAK,OAAO;AACrB,wBAAQ,KAAK,OAAO;AAAA;AAGrB,kBAAI,KAAK,OAAO,UAAU;AACzB,uBAAO;AAAA,kBACN,UAAU,KAAK,OAAO;AAAA,kBACtB,OAAO;AAAA,kBACP,OAAO,KAAK;AAAA;AAAA;AAId,kBAAI,KAAK,OAAO,OAAO;AACtB,gCAAgB;AAAA;AAAA;AAAA,iBAGZ;AACN,mBAAO;AAAA;AAAA,iBAEA,GAAP;AACD,mBAAS;AACT,kBAAQ,kBAAkB;AAAA;AAG3B,YAAI,OAAO;AACV,iBAAO,KAAK;AACX,gBAAI,EAAE,IAAI;AACT,kBAAI;AAGJ,kBAAI;AACJ,kBAAI,IAAI;AACR,qBAAO,CAAE,eAAc,OAAO,KAAK;AAClC,qBAAK;AAAA;AAGN,kBAAI;AACH,+BAAe,MAAM,KAAK,WAAW;AAAA,kBACpC;AAAA,kBACA;AAAA,kBACA,QAAQ,MAAM,EAAE;AAAA,kBAChB;AAAA,kBACA;AAAA,kBACA,OAAO,YAAY;AAAA;AAGpB,oBAAI,gBAAgB,aAAa,UAAU,aAAa,OAAO,OAAO;AACrE;AAAA;AAGD,oBAAI,gBAAgB,aAAa,UAAU,aAAa,OAAO,OAAO;AACrE,0BAAQ,kCACJ,QACA,aAAa,OAAO;AAAA;AAIzB,yBAAS,OAAO,MAAM,GAAG,IAAI,GAAG,OAAO;AACvC;AAAA,uBACQ,GAAP;AACD;AAAA;AAAA;AAAA;AAKH,iBAAO,MAAM,KAAK,YAAY;AAAA,YAC7B;AAAA,YACA;AAAA,YACA;AAAA;AAAA,eAEK;AACN,cAAI,QAAQ,KAAK,UAAU,KAAK,OAAO,OAAO;AAC7C,oBAAQ,kCACJ,QACA,KAAK,OAAO;AAAA;AAIjB,iBAAO,KAAK;AAAA;AAAA;AAId,WAAO,MAAM,KAAK,mCAAmC;AAAA,MACpD;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;AAAA;AAAA,QAWI,YAAY,EAAE,QAAQ,OAAO,OAAO;;AAEzC,UAAM,SAAS;AAEf,UAAM,OAAO,MAAM,KAAK,WAAW;AAAA,MAClC,QAAQ,MAAM,KAAK,SAAS;AAAA,MAC5B;AAAA,MACA;AAAA,MACA,OAAO;AAAA;AAER,UAAM,aAAa,MAAM,KAAK,WAAW;AAAA,MACxC;AAAA,MACA;AAAA,MACA,QAAQ,MAAM,KAAK,SAAS;AAAA,MAC5B;AAAA,MACA;AAAA,MACA,OAAQ,QAAQ,KAAK,UAAU,KAAK,OAAO,SAAU;AAAA;AAGtD,UAAM,SAAS,CAAC,MAAM;AACtB,UAAM,QAAQ,kCAAK,mCAAM,WAAN,mBAAc,QAAU,+CAAY,WAAZ,mBAAoB;AAE/D,WAAO,MAAM,KAAK,mCAAmC;AAAA,MACpD;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;AAAA;AAAA;AAyBH,qBAAqB,EAAE,OAAO,QAAQ,SAAS,OAAO,KAAK,gBAAgB,WAAW;AAKrF,QAAM,WAAW,IAAI,SAAS;AAAA,IAC7B;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAGD,QAAM,SAAS,QACZ,IAAI,OAAO;AAAA,IACX,MAAM,MAAM;AAAA,IACZ;AAAA,IACA;AAAA,IACA;AAAA,OAEA;AAEHA,SAAK,EAAE,QAAQ;AACf,YAAU;AAEV,MAAI;AAAS,UAAM,SAAS,MAAM;AAClC,MAAI,QAAQ;AACX,QAAI;AAAK,aAAO,KAAK,SAAS,MAAM,EAAE,cAAc,QAAQ;AAC5D,WAAO;AAAA;AAGR,gBAAc,IAAI,YAAY;AAAA;;"}